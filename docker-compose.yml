version: '3.8'

services:
  db:
    image: postgres:14
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network


  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network

  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: web
    command: bash -c "python manage.py migrate && python manage.py collectstatic --noinput && gunicorn --bind 0.0.0.0:8000 --timeout 120 LazyManager.wsgi:application"
    volumes:
      - .:/app
      - ./static:/app/static
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    networks:
      - app-network

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celery
    command: sh -c "
        /wait-for.sh db 5432 &&
        /wait-for.sh redis 6379 &&
        celery -A LazyManager worker --loglevel=info
      "
    volumes:
      - .:/app
    depends_on:
      - redis
      - db
    networks:
      - app-network

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celery-beat
    command: [ "/wait-for.sh", "redis", "6379", "celery -A LazyManager beat --loglevel=info" ]
    volumes:
      - .:/app
    depends_on:
      - redis
      - db
    networks:
      - app-network

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      - web
    networks:
      - app-network

volumes:
  pgdata:
    driver: local
  static_volume:
    driver: local
  media_volume:
    driver: local

networks:
  app-network:
    driver: bridge
